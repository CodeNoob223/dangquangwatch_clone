--Mỗi khi có một sản phẩm bất kỳ được insert thì sẽ tăng số lượng của sản phẩm đó và tăng cột chiphi = ( chiphi + (giá sản phẩm vừa thêm / 10) * sanpham.soluong ) và làm tròn thành số nguyên dương
--đồng thời tăng cột của sản phẩm tương ứng trong bảng thongke, ví dụ dongho được insert thì tăng thongke.dongho lên 1 đơn vị (với mathongke = 1)

DELIMITER //

CREATE PROCEDURE UpdateThongKeOnInsert(
    IN productType VARCHAR(255),
    IN productPrice DECIMAL(10,2),
    IN productQuantity INT
)
BEGIN
    DECLARE currentCost INT;

    -- Lấy giá trị hiện tại của chiphi
    SELECT chiphi INTO currentCost FROM thongke WHERE mathongke = 1;

    -- Tính toán chi phí mới
    SET currentCost = currentCost + CEIL(productPrice / 10) * productQuantity;

    -- Tăng số lượng sản phẩm tương ứng và cập nhật chi phí trong bảng thongke
    IF productType = 'dongho' THEN
        UPDATE thongke
        SET dongho = dongho + 1,
            chiphi = currentCost
        WHERE mathongke = 1;
    ELSEIF productType = 'kinhmat' THEN
        UPDATE thongke
        SET kinhmat = kinhmat + 1,
            chiphi = currentCost
        WHERE mathongke = 1;
    ELSEIF productType = 'phukien' THEN
        UPDATE thongke
        SET phukien = phukien + 1,
            chiphi = currentCost
        WHERE mathongke = 1;
    ELSEIF productType = 'trangsuc' THEN
        UPDATE thongke
        SET trangsuc = trangsuc + 1,
            chiphi = currentCost
        WHERE mathongke = 1;
    ELSEIF productType = 'butky' THEN
        UPDATE thongke
        SET butky = butky + 1,
            chiphi = currentCost
        WHERE mathongke = 1;
    END IF;
END //

DELIMITER ;

DELIMITER //

CREATE TRIGGER dongho_after_insert
AFTER INSERT ON dongho
FOR EACH ROW
BEGIN
    CALL UpdateThongKeOnInsert('dongho', NEW.giatien, NEW.soluong);
END //

DELIMITER ;

DELIMITER //

CREATE TRIGGER kinhmat_after_insert
AFTER INSERT ON kinhmat
FOR EACH ROW
BEGIN
    CALL UpdateThongKeOnInsert('kinhmat', NEW.giatien, NEW.soluong);
END //

DELIMITER ;

DELIMITER //

CREATE TRIGGER phukien_after_insert
AFTER INSERT ON phukien
FOR EACH ROW
BEGIN
    CALL UpdateThongKeOnInsert('phukien', NEW.giatien, NEW.soluong);
END //

DELIMITER ;

DELIMITER //

CREATE TRIGGER trangsuc_after_insert
AFTER INSERT ON trangsuc
FOR EACH ROW
BEGIN
    CALL UpdateThongKeOnInsert('trangsuc', NEW.gia, NEW.soluong);
END //

DELIMITER ;

DELIMITER //

CREATE TRIGGER butky_after_insert
AFTER INSERT ON butky
FOR EACH ROW
BEGIN
    CALL UpdateThongKeOnInsert('butky', NEW.giatien, NEW.soluong);
END //

DELIMITER ;


--Mỗi lần chitietdonhang được insert thì tăng thongke.luotthemgiohang lên 1 đơn vị (mathongke luôn bằng 1)

DELIMITER //

CREATE TRIGGER chitietdonhang_after_insert
AFTER INSERT ON chitietdonhang
FOR EACH ROW
BEGIN
    -- Tăng cột luotthemgiohang trong bảng thongke
    UPDATE thongke
    SET luotthemgiohang = luotthemgiohang + 1,
        luottruycap = luottruycap + 1,
        luotxemsanpham = luotxemsanpham + 1
    WHERE mathongke = 1;
END //

DELIMITER ;


--Mỗi khi có donhang được insert với tinhtrang là 'Chờ xác nhận' thì tăng thongke donhangchoxacnhan luotdathang
--Đồng thời tăng thongke.donhang
DELIMITER //

CREATE TRIGGER donhang_after_insert
AFTER INSERT ON donhang
FOR EACH ROW
BEGIN
    -- Tăng giá trị của cột donhang trong bảng thongke
    UPDATE thongke
    SET donhang = donhang + 1, luotdathang = luotdathang + 1
    WHERE mathongke = 1;

    -- Kiểm tra nếu tinhtrang là 'Chờ xác nhận'
    IF NEW.tinhtrang = 'Chờ xác nhận' THEN
        -- Tăng cột donhangchoxacnhan trong bảng thongke
        UPDATE thongke
        SET donhangchoxacnhan = donhangchoxacnhan + 1
        WHERE mathongke = 1;
    END IF;
END //

DELIMITER ;


--Mỗi khi có donhang được cập nhật tình trạng từ 'Chờ xác nhận' thành 'Đã xác nhận' thì giảm donhangchoxacnhan 1 đơn vị
DELIMITER //

CREATE TRIGGER donhang_after_xacnhan
AFTER UPDATE ON donhang
FOR EACH ROW
BEGIN
    -- Kiểm tra nếu tình trạng thay đổi từ 'Chờ xác nhận' thành 'Đã xác nhận'
    IF OLD.tinhtrang = 'Chờ xác nhận' AND NEW.tinhtrang = 'Đã xác nhận' THEN
        -- Giảm giá trị của cột donhangchoxacnhan trong bảng thongke
        UPDATE thongke
        SET donhangchoxacnhan = donhangchoxacnhan - 1,
        donhangdaxacnhan = donhangdaxacnhan + 1
        WHERE mathongke = 1;
    END IF;
END //

DELIMITER ;


--Tăng giá trị của donhangdanggiao khi tình trạng đơn hàng được cập nhật từ 'Đã xác nhận' thành 'Đang vận chuyển'.
DELIMITER //

CREATE TRIGGER donhang_after_giao
AFTER UPDATE ON donhang
FOR EACH ROW
BEGIN
    -- Kiểm tra nếu tình trạng thay đổi từ 'Đã xác nhận' thành 'Đang vận chuyển'
    IF OLD.tinhtrang = 'Đã xác nhận' AND NEW.tinhtrang = 'Đang vận chuyển' THEN
        -- Tăng giá trị của cột donhangdanggiao trong bảng thongke
        UPDATE thongke
        SET donhangdanggiao = donhangdanggiao + 1,
        donhangdaxacnhan = donhangdaxacnhan - 1
        WHERE mathongke = 1;
    END IF;
END //

DELIMITER ;

-- Xóa trigger
DROP TRIGGER IF EXISTS donhang_after_nhan;

-- Tăng giá trị của donhangdagiao, luotthanhtoan, chiphi và doanhthu 
-- khi tình trạng đơn hàng được cập nhật từ 'Đang vận chuyển' thành 'Đã nhận hàng', 
-- đồng thời giảm donhangdanggiao 
-- tình trạng thanh toán của đơn hàng đã được sửa sẵn trong controller.
DELIMITER //

CREATE TRIGGER donhang_after_nhan
AFTER UPDATE ON donhang
FOR EACH ROW
BEGIN
    DECLARE v_done INT DEFAULT FALSE;
    DECLARE v_machitiet INT;
    DECLARE v_madon INT;
    DECLARE v_loaisanpham VARCHAR(20);
    DECLARE v_masanpham INT;
    DECLARE v_soluong INT;
    DECLARE v_giatien INT;
    DECLARE v_tinhtrang_cu VARCHAR(255);
    
    -- Declare cursor
    DECLARE cur CURSOR FOR 
    SELECT machitietdonhang, madonhang, loaisanpham, masanpham, soluong, giatien 
    FROM ChiTietDonHang
    WHERE madonhang = OLD.madonhang;
    
    -- Declare handler
    DECLARE CONTINUE HANDLER FOR NOT FOUND SET v_done = TRUE;

    -- Check if status changed from 'Đang vận chuyển' to 'Đã nhận hàng'
    IF OLD.tinhtrang = 'Đang vận chuyển' AND NEW.tinhtrang = 'Đã nhận hàng' THEN
        -- Update thongke table
        UPDATE thongke
        SET donhangdanggiao = donhangdanggiao - 1,
            donhangdagiao = donhangdagiao + 1,
            luotthanhtoan = luotthanhtoan + 1,
            luothoanthanhdon = luothoanthanhdon + 1,
            chiphi = chiphi + 50000,
            doanhthu = doanhthu + NEW.tongtien
        WHERE mathongke = 1;

        -- Open cursor
        OPEN cur;

        -- Loop through chitietdonhang records
        read_loop: LOOP
            FETCH cur INTO v_machitiet, v_madon, v_loaisanpham, v_masanpham, v_soluong, v_giatien;
            IF v_done THEN
                LEAVE read_loop;
            END IF;

            -- Decrease the corresponding product quantity based on loaisanpham
            CASE v_loaisanpham
                WHEN 'dongho' THEN
                    UPDATE dongho
                    SET dongho.soluong = dongho.soluong - v_soluong
                    WHERE dongho.madongho = v_masanpham;
                WHEN 'butky' THEN
                    UPDATE butky
                    SET butky.soluong = butky.soluong - v_soluong
                    WHERE butky.mabutky = v_masanpham;
                WHEN 'kinhmat' THEN
                    UPDATE kinhmat
                    SET kinhmat.soluong = kinhmat.soluong - v_soluong
                    WHERE kinhmat.makinhmat = v_masanpham;
                WHEN 'phukien' THEN
                    UPDATE phukien
                    SET phukien.soluong = phukien.soluong - v_soluong
                    WHERE phukien.maphukien = v_masanpham;
                WHEN 'trangsuc' THEN
                    UPDATE trangsuc
                    SET trangsuc.soluong = trangsuc.soluong - v_soluong
                    WHERE trangsuc.matrangsuc = v_masanpham;
                ELSE
                    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = v_loaisanpham;
            END CASE;
        END LOOP;
        
        -- Close cursor
        CLOSE cur;
    END IF;
END //

DELIMITER ;



--Tăng giá trị của donhangdahuy và giảm giá trị của các cột tương ứng (donhangchoxacnhan, donhangdanggiao) dựa vào tình trạng cũ khi tình trạng đơn hàng được cập nhật thành 'Đã hủy'.
DELIMITER //

CREATE TRIGGER donhang_after_huy
AFTER UPDATE ON donhang
FOR EACH ROW
BEGIN
    -- Kiểm tra nếu tình trạng mới là 'Đã hủy'
    IF NEW.tinhtrang = 'Đã hủy' THEN
        -- Tăng giá trị của cột donhangdahuy trong bảng thongke
        UPDATE thongke
        SET donhangdahuy = donhangdahuy + 1, donhang = donhang - 1
        WHERE mathongke = 1;

        -- Giảm giá trị của các cột tương ứng dựa vào tình trạng cũ
        IF OLD.tinhtrang = 'Chờ xác nhận' THEN
            UPDATE thongke
            SET donhangchoxacnhan = donhangchoxacnhan - 1
            WHERE mathongke = 1;
        ELSEIF OLD.tinhtrang = 'Đang vận chuyển' THEN
            UPDATE thongke
            SET donhangdanggiao = donhangdanggiao - 1
            WHERE mathongke = 1;
        END IF;
    END IF;
END //

DELIMITER ;



--lắng nghe sự kiện INSERT. 
--Khi một tài khoản mới được thêm vào với loai_tai_khoan là 'ROLE_KHACHHANG', trigger này sẽ tăng giá trị của các cột khachhang và luotdangkymoi trong bảng thongke.
DELIMITER //

CREATE TRIGGER taikhoan_after_insert_khachhang
AFTER INSERT ON taikhoan
FOR EACH ROW
BEGIN
    -- Kiểm tra nếu loai_tai_khoan là 'ROLE_KHACHHANG'
    IF NEW.loai_tai_khoan = 'ROLE_KHACHHANG' THEN
        -- Tăng giá trị của các cột khachhang và luotdangkymoi trong bảng thongke
        UPDATE thongke
        SET khachhang = khachhang + 1,
            luotdangkymoi = luotdangkymoi + 1
        WHERE mathongke = 1;
    END IF;
END //

DELIMITER ;


--Liệt kê các trigger
SELECT TRIGGER_NAME, EVENT_MANIPULATION, EVENT_OBJECT_TABLE, ACTION_STATEMENT, ACTION_TIMING
FROM information_schema.TRIGGERS
WHERE TRIGGER_SCHEMA = 'dongho_dangquang';


--Liệt kê các PROCEDURE
SELECT ROUTINE_NAME, ROUTINE_TYPE, DATA_TYPE
FROM information_schema.ROUTINES
WHERE ROUTINE_SCHEMA = 'dongho_dangquang' AND ROUTINE_TYPE = 'PROCEDURE';

-- Gán delete cascade
ALTER TABLE anh_dongho
ADD CONSTRAINT fk_anh_dongho_dongho
FOREIGN KEY (madongho) REFERENCES dongho(madongho)
ON DELETE CASCADE;

ALTER TABLE anh_butky
ADD CONSTRAINT fk_anh_butky_butky
FOREIGN KEY (mabutky) REFERENCES butky(mabutky)
ON DELETE CASCADE;

ALTER TABLE anh_trangsuc
ADD CONSTRAINT fk_anh_trangsuc_trangsuc
FOREIGN KEY (matrangsuc) REFERENCES trangsuc(matrangsuc)
ON DELETE CASCADE;

ALTER TABLE anh_kinhmat
ADD CONSTRAINT fk_anh_kinhmat_kinhmat
FOREIGN KEY (makinhmat) REFERENCES kinhmat(makinhmat)
ON DELETE CASCADE;

ALTER TABLE anh_phukien
ADD CONSTRAINT fk_anh_phukien_phukien
FOREIGN KEY (maphukien) REFERENCES phukien(maphukien)
ON DELETE CASCADE;

DELIMITER //

CREATE TRIGGER delete_dongho
AFTER DELETE ON dongho
FOR EACH ROW
BEGIN
    UPDATE thongke
    SET dongho = dongho - 1
    WHERE mathongke = 1;
END //

DELIMITER ;

DELIMITER //

CREATE TRIGGER delete_butky
AFTER DELETE ON butky
FOR EACH ROW
BEGIN
    UPDATE thongke
    SET butky = butky - 1
    WHERE mathongke = 1;
END //

DELIMITER ;

DELIMITER //

CREATE TRIGGER delete_trangsuc
AFTER DELETE ON trangsuc
FOR EACH ROW
BEGIN
    UPDATE thongke
    SET trangsuc = trangsuc - 1
    WHERE mathongke = 1;
END //

DELIMITER ;

DELIMITER //

CREATE TRIGGER delete_kinhmat
AFTER DELETE ON kinhmat
FOR EACH ROW
BEGIN
    UPDATE thongke
    SET kinhmat = kinhmat - 1
    WHERE mathongke = 1;
END //

DELIMITER ;

DELIMITER //

CREATE TRIGGER delete_phukien
AFTER DELETE ON phukien
FOR EACH ROW
BEGIN
    UPDATE thongke
    SET phukien = phukien - 1
    WHERE mathongke = 1;
END //

DELIMITER ;

DELIMITER //

CREATE TRIGGER delete_taikhoan_role_khachhang
AFTER DELETE ON taikhoan
FOR EACH ROW
BEGIN
    IF OLD.loai_tai_khoan = 'ROLE_KHACHHANG' THEN
        UPDATE thongke
        SET khachhang = khachhang - 1
        WHERE mathongke = 1; -- Đảm bảo chỉ cập nhật vào dòng mathongke = 1, nếu có nhiều dòng thống kê
    END IF;
END //

DELIMITER ;